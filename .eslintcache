[{"G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\Blog Post\\Modal1.js":"1","G:\\Management project\\management-tool\\src\\Components\\Module\\Pages\\Sider_Pages\\Blog\\Blog.js":"2","G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\DeletePost.js":"3","G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\infoModal.js":"4","G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\InfoModal.js":"5","G:\\Management project\\management-tool\\src\\GlobalStyle.js":"6","G:\\Management project\\management-tool\\src\\Core\\Redux\\Store.js":"7","G:\\Management project\\management-tool\\src\\Components\\Module\\Pages\\Page.js":"8","G:\\Management project\\management-tool\\src\\Components\\Layout\\Sider\\Sider1.js":"9","G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Icon\\Icons.js":"10"},{"size":3067,"mtime":1609232631430,"results":"11","hashOfConfig":"12"},{"size":7112,"mtime":1609242609079,"results":"13","hashOfConfig":"12"},{"size":3614,"mtime":1609158214719,"results":"14","hashOfConfig":"12"},{"size":1262,"mtime":1609232584479,"results":"15","hashOfConfig":"12"},{"size":1242,"mtime":1609238259163,"results":"16","hashOfConfig":"12"},{"size":12773,"mtime":1609243095722,"results":"17","hashOfConfig":"12"},{"size":7769,"mtime":1609240249319,"results":"18","hashOfConfig":"12"},{"size":1125,"mtime":1609239794138,"results":"19","hashOfConfig":"12"},{"size":1176,"mtime":1609240284621,"results":"20","hashOfConfig":"12"},{"size":9349,"mtime":1608717430911,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"19fjie",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":3,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\Blog Post\\Modal1.js",["43"],"import React, {useState} from \"react\";\r\nimport { Form, Input, Button, message, Upload, Select , Modal} from \"antd\";\r\n\r\nconst Modal1 = () => {\r\n  const [postTitle , setpostTitle] = useState(\"\") \r\n  const { TextArea } = Input;\r\n  const children = [];\r\n  \r\n\r\n  function handleChange(value) {\r\n    \r\n    console.log(` ${value}`  );\r\n  }\r\n\r\n  const props = {\r\n    name: \"file\",\r\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n    headers: {\r\n      authorization: \"authorization-text\",\r\n    },\r\n    onChange(info) {\r\n      if (info.file.status !== \"uploading\") {\r\n        console.log(info.file, info.fileList ,);\r\n      }\r\n      if (info.file.status === \"done\") {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === \"error\") {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n\r\n    };\r\n    const handleOk = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n\r\n\r\n    };\r\n  return (\r\n    <>\r\n            <Button type=\"primary\" onClick={showModal}>\r\n               Create\r\n           </Button>\r\n          <Modal\r\n              visible={isModalVisible}\r\n              title=\"New Post\"\r\n              onOk={handleOk}\r\n              onCancel={handleCancel}\r\n              footer={[\r\n                \r\n                <Button key=\"submit\" type=\"primary\"  onClick={handleOk} >\r\n                  Create\r\n                </Button>,\r\n              ]}\r\n            >\r\n          \r\n      <Form \r\n        xs sm md lg xl xxl\r\n        className=\" ant-form-vertical\"\r\n        name=\"basic\"\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n      >\r\n        <Form.Item\r\n          label=\"Post Title\"\r\n          name=\"PostTitle\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your Post Title!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input value={postTitle}  placeholder=\"Enter Post Title\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"Post Cover Image\">\r\n          <Upload {...props}>\r\n            <Button>Select</Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"Post Content\">\r\n          <TextArea\r\n          \r\n            rows={5}\r\n            placeholder=\"Enter Post Content (This is resizable text area)\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item label=\"Attachments\">\r\n          <Upload {...props}>\r\n            <Button >Select</Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item label=\"Hashtages\">\r\n          <Select\r\n            mode=\"tags\"\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Tags Mode\"\r\n            onChange={handleChange}\r\n          >\r\n            {children}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default Modal1;","G:\\Management project\\management-tool\\src\\Components\\Module\\Pages\\Sider_Pages\\Blog\\Blog.js",[],"G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\DeletePost.js",[],"G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\infoModal.js",["44","45","46","47"],"G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Modal\\Blog Modal\\InfoModal.js",[],"G:\\Management project\\management-tool\\src\\GlobalStyle.js",[],"G:\\Management project\\management-tool\\src\\Core\\Redux\\Store.js",[],"G:\\Management project\\management-tool\\src\\Components\\Module\\Pages\\Page.js",[],"G:\\Management project\\management-tool\\src\\Components\\Layout\\Sider\\Sider1.js",[],"G:\\Management project\\management-tool\\src\\Components\\Module\\globalComponents\\Icon\\Icons.js",[],{"ruleId":"48","severity":1,"message":"49","line":5,"column":22,"nodeType":"50","messageId":"51","endLine":5,"endColumn":34},{"ruleId":"52","severity":2,"message":"53","line":6,"column":49,"nodeType":"50","endLine":6,"endColumn":57},{"ruleId":"54","severity":2,"message":"55","line":6,"column":49,"nodeType":"50","messageId":"56","endLine":6,"endColumn":57},{"ruleId":"57","severity":1,"message":"58","line":22,"column":3,"nodeType":"50","messageId":"59","endLine":22,"endColumn":15},{"ruleId":"54","severity":2,"message":"60","line":23,"column":5,"nodeType":"50","messageId":"56","endLine":23,"endColumn":13},"no-unused-vars","'setpostTitle' is assigned a value but never used.","Identifier","unusedVar","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"infoModal\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-undef","'useState' is not defined.","undef","no-const-assign","'handleCancel' is constant.","const","'setState' is not defined."]